 ол-во секторов+каталог
CSEC = ((LEN2+1)*TRK - OFF)*SEC

—вободных секторов
USEC = CSEC - CKS*128/(2^(LEN1+7))

—вободных блоков
UBLK = USEC*(2^(LEN1+7))/BLS

----------------------------------
ќрион
2^(LEN1+7) = 1024
LEN2+1 = 2
TRK = 80
OFF = 4
SEC=5
CKS=32
BLS=2048

CSEC = 780
USEC = 776
UBLK = 388 совпадает

----------------------------
Standard CP/M 8" SSSD disk

2^(LEN1+7)  = 128
LEN2+1 = 1
SEC=26
TRK=77
OFF=2
CKS=16
BLS=1024

SEC * (TRK-OFF) - (CKS/8)

------------------------------------
Apple CP/M 5.25" disks

LEN2+1 = 2
2^(LEN1+7) = 256
OFF = 3
SEC = 16
TRK = 80
BLS = 2048
CKS = 64

CSEC = 2512 (628  б)
USEC = 2480
UBLK(USEC) = 310 не совпадает
UBLK(CSEC) = 314 => DSM=313 совпадает!

¬ывод: в классической CP/M DSM включает каталог, в наших верси€х - нет

“естиру€ генерацию образа CP/M € столкнулс€ с такой проблемой:
¬ описателе формата диска (DPB) есть поле под названием DSM. ¬ классических руководствах по CP/M утверждаетс€ (и мои расчеты по приведенным примерам это подтверждают), что оно равно максимальному номеру блока, причем каталог входит в этот объем.

“.е. дл€ расчета DSM отбрасываем системные треки, делим оставшеес€ место на размер блока и вычитаем единицу.

— другой стороны, разбира€ диски ќрионовских систем, € обнаружил, что в них DSM отличаетс€ тем, что из него уже вычтен каталог и не вычтена единица. “.е. он обозначает максимальное свободное место в блоках.

 акой алгоритм вычислени€ DSM в итоге использовать? Ёто принципиальное решение авторов орионовской версии CP/M или ошибка программ генерации образов? ≈сли это не ошибка, то придетс€ вводить форматы "наши слоны" и "буржуи прокл€тые"?